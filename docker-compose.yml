version: "3.8" # 도커 컴포즈 파일의 버전을 명시합니다.

services:
  db:
    image: mysql:8.0 # 사용할 DB의 도커 이미지 (예: MySQL 8.0)
    ports:
      - "32306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: junlabFT7zDgh64 # 루트 비밀번호 설정
      MYSQL_USER: webcontainer # DB 사용자 이름
      MYSQL_PASSWORD: SJdnlvs642 # DB 사용자 비밀번호
      TZ: Asia/Seoul
    volumes:
      - db_data:/var/lib/mysql # 데이터를 저장할 볼륨 설정
      - ./database/dump.sql:/docker-entrypoint-initdb.d/dump.sql
      - ./database/grants.sql:/docker-entrypoint-initdb.d/grants.sql
      - ./database/timezone.cnf:/etc/mysql/conf.d/timezone.cnf
    networks:
      - webnet # 웹 서버와 동일한 네트워크로 설정
    restart: always

  web:
    image: wkrwjafl15/junlabweb
    # build: .
    ports:
      - "880:880" # 호스트 포트:컨테이너 포트 (예: 8080)
      - "4322:4322"
      - "4326:4326/udp"
      - "9977:9977"
    depends_on:
      - db # db 컨테이너가 먼저 시작되어야 함을 명시
    networks:
      - webnet # DB와 동일한 네트워크로 설정
    volumes:
      - .:/usr/src/app
      - ./pm2-config/dump.pm2:/root/.pm2/dump.pm2
    # stdin_open: true # -i 옵션과 유사한 역할을 합니다
    tty: true # -t 옵션과 유사한 역할을 합니다
    command:
      [
        "/bin/bash",
        "-c",
        'eval "$(/root/.local/share/fnm/fnm env)" && pm2 resurrect && exec bash',
      ]
    restart: always

networks:
  webnet: # 두 컨테이너가 사용할 네트워크를 정의
    driver: bridge # 기본 브리지 네트워크를 사용

volumes:
  db_data: # DB 데이터를 저장할 볼륨을 정의
